app_id = "taiko_helder"

[l1]
name = "helder"
rpc_url = ""
ws_url = ""
beacon_url = ""

[l2]
name = "taiko"
rpc_url = "http://0.0.0.0:8545"
ws_url = "ws://0.0.0.0:8546"
taiko_token = "0x439d5662aACf0693D9CB549979b3D93bf43b86B3"              # taikoTokenAddress
l1_contract = "0xc2DD6e8DC8d0558F00Cc1FA6A16FFF1A62Cc436B"              # taikoInboxAddress
l2_contract = "0x1670100000000000000000000000000000010001"              # taikoAnchorAddress
router_contract = "0x8dDEA87FfA296B951881aDacbAe8011090C54cAC"          # preconfRouterAddress
whitelist_contract = "0x83F71950e2b30Deb2419De69b6173A2c581b1C13"       # preconfWhitelistAddress
inclusion_store_address = ""  # ForcedInclusionStoreAddress
taiko_wrapper_address = ""    # TaikoWrapperAddress

[gateway]
rpc_port = 10001
simulator_url = "http://0.0.0.0:8545"
propose_frequency_secs = 30
l2_target_block_time_ms = 2_000
dry_run = false
# if gateway doesnt receive a new L1 block for this amount of time, stop sequencing
l1_delay_secs = 48                                                  
# wait until this many blocks have passed to check that the L1 propose tx hasnt reorged out
l1_safe_lag = 2 
coinbase = "0x591317B806B96262C07105CC06CB4831008AfDf2"
# Number of blocks to wait before refreshing the anchor, the larger this is the more blocks we can fit in a batch, but we risk it getting stale when proposing
# This is on top of the l1_safe_lag above, so from the latest L1 blocks we keep blocks up to anchor_batch_lag + l1_safe_lag old
# This should be higher than delay_sequence_slots, so we avoid reorging the previous gateway
anchor_batch_lag = 16
soft_block_url = ""
handover_window_slots = 4
handover_start_buffer_ms = 6_000
jwt_secret_path = "~/taiko-geth-gattaca/geth/jwtsecret"